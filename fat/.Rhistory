runExample("09_upload")
library("shiny")
runExample("09_upload")
library(shiny)
runExample("01_hello")
runApp("CorrelationApp")
getwd()
runApp("CorrelationApp")
setwd("~")
getwd()
getwd()
setwd("~/Projects/R/Shiny/REIT/CorrelationApp")
runApp("CorrelationApp")
setwd("~/Projects/R/Shiny/REIT")
runApp("CorrelationApp")
runApp("CorrelationApp")
source('~/Projects/R/Shiny/REIT/CorrelationApp/server.R', echo=TRUE)
shinyUI(fluidPage(
titlePanel("Correlations"),
sidebarLayout(
sidebarPanel("sidebar panel"),
mainPanel("main panel")
)
))
runApp("CorrelationApp")
runApp("CorrelationApp")
shinyUI(fluidPage(
titlePanel("REIT Correlations"),
sidebarLayout(
sidebarPanel("sidebar panel"),
mainPanel("main panel")
)
))
runApp("CorrelationApp")
runApp("CorrelationApp")
runApp("CorrelationApp")
runApp("CorrelationApp")
?selectInput
runApp("CorrelationApp")
runApp("CorrelationApp")
sliderInput("range",
source('~/Projects/R/Shiny/REIT/CorrelationApp/ui.R', echo=TRUE)
source('~/Projects/R/Shiny/REIT/CorrelationApp/ui.R', echo=TRUE)
sidebarLayout(
source('~/Projects/R/Shiny/REIT/CorrelationApp/ui.R', echo=TRUE)
source('~/Projects/R/Shiny/REIT/CorrelationApp/ui.R', echo=TRUE)
runApp("CorrelationApp")
textOutput("text1")
output
output$text1
source('~/Projects/R/Shiny/REIT/CorrelationApp/ui.R', echo=TRUE)
input$var
runApp("CorrelationApp")
output$text1 <- renderText({
runApp("CorrelationApp")
runApp("CorrelationApp")
?switch
?Vo
??Vo
getwd()
setwd("C:/Users/Kevin/Documents/Projects/R/Shiny")
runApp("stockVis")
install.packages("quantmod")
library(quantmod)
setwd("C:/Users/KMei/Documents/1UT/0Spring 2014/REIT/PortfolioWeighting/RDataGrab")
endDate <- Sys.Date()
startDate <- "2000-01-01"
tickers <- read.csv("tickers.csv", stringsAsFactors = FALSE, header = FALSE)
tickers <- tickers$V1
dfPrices <- data.frame()
dfReturns <- data.frame()
for(j in 1:length(tickers))
{
currentTicker <- tickers[j]
print(paste0("Current Ticker: ", currentTicker))
# downloads prices
dailyPrices <- getSymbols(currentTicker, from = startDate, to = endDate, warnings = FALSE, auto.assign=FALSE)
# use this variable to strip only the Adjusted Closes from Yahoo Finance
# not relevant if using a different source, or if Yahoo changes their format
# for each stock, calculate monthly return and append it to the matrix.
dailyPrices <- dailyPrices[,6]
if(nrow(dfPrices)==0)
dfPrices <- data.frame("date" = index(dailyPrices), dailyPrices)
else
{
df2 <- data.frame("date" = index(dailyPrices), dailyPrices)
dfPrices <- merge(dfPrices, df2, by = "date", all = TRUE)
}
colnames(dfPrices)[j+1] <- currentTicker
# now do the returns
monthlyReturns <- monthlyReturn(dailyPrices)
if(nrow(dfReturns)==0)
dfReturns <- data.frame("date" = index(monthlyReturns), monthlyReturns)
else
{
df2 <- data.frame("date" = index(monthlyReturns), monthlyReturns)
dfReturns <- merge(dfReturns, df2, by = "date", all = TRUE)
}
colnames(dfReturns)[j+1] <- currentTicker
}
# badRows <- c()
# for(i in 1:length(dfPrices$date)){
#
#   if(length(which(is.na(dfPrices[i,])))>50){
#     badRows <- append(badRows, i)
#   }
# }
#
# dfPrices2 <- dfPrices[-(badRows),]
write.csv(dfReturns, "monthlyReturns.csv", row.names = FALSE)
write.csv(dfPrices, "dailyPrices.csv", row.names = FALSE)
rwr <- getSymbols("RWR", from = startDate, to = endDate, warnings = FALSE, auto.assign=FALSE)
rwr <- as.data.frame(monthlyReturn(rwr[,6]))
write.csv(rwr, "rwr.csv", row.names = TRUE)
tickers <- read.csv("tickers.csv", stringsAsFactors = FALSE, header = FALSE)
setwd("C:/Users/KMei/Documents/1UT/0Spring 2014/REIT/PortfolioWeighting/RDataGrab")
setwd("C:/Users/KMei/Dropbox/REIT/PortfolioWeighting/")
setwd("C:/Users/KMei/Dropbox/REIT/PortfolioWeighting/")
setwd("C:/Users/KMei/Dropbox/REIT/PortfolioWeighting")
setwd("C:/Users/Kevin/Dropbox/REIT/PortfolioWeighting")
endDate <- Sys.Date()
startDate <- "2000-01-01"
tickers <- read.csv("tickers.csv", stringsAsFactors = FALSE, header = FALSE)
tickers <- tickers$V1
write.csv(dfReturns, "RDataGrab/monthlyReturns.csv", row.names = FALSE)
library(quantmod)
setwd("C:/Users/Kevin/Dropbox/REIT/PortfolioWeighting")
endDate <- Sys.Date()
startDate <- "2000-01-01"
tickers <- read.csv("tickers.csv", stringsAsFactors = FALSE, header = FALSE)
tickers <- tickers$V1
dfPrices <- data.frame()
dfReturns <- data.frame()
for(j in 1:length(tickers))
{
currentTicker <- tickers[j]
print(paste0("Current Ticker: ", currentTicker))
# downloads prices
dailyPrices <- getSymbols(currentTicker, from = startDate, to = endDate, warnings = FALSE, auto.assign=FALSE)
# use this variable to strip only the Adjusted Closes from Yahoo Finance
# not relevant if using a different source, or if Yahoo changes their format
# for each stock, calculate monthly return and append it to the matrix.
dailyPrices <- dailyPrices[,6]
if(nrow(dfPrices)==0)
dfPrices <- data.frame("date" = index(dailyPrices), dailyPrices)
else
{
df2 <- data.frame("date" = index(dailyPrices), dailyPrices)
dfPrices <- merge(dfPrices, df2, by = "date", all = TRUE)
}
colnames(dfPrices)[j+1] <- currentTicker
# now do the returns
monthlyReturns <- monthlyReturn(dailyPrices)
if(nrow(dfReturns)==0)
dfReturns <- data.frame("date" = index(monthlyReturns), monthlyReturns)
else
{
df2 <- data.frame("date" = index(monthlyReturns), monthlyReturns)
dfReturns <- merge(dfReturns, df2, by = "date", all = TRUE)
}
colnames(dfReturns)[j+1] <- currentTicker
}
# badRows <- c()
# for(i in 1:length(dfPrices$date)){
#
#   if(length(which(is.na(dfPrices[i,])))>50){
#     badRows <- append(badRows, i)
#   }
# }
#
# dfPrices2 <- dfPrices[-(badRows),]
write.csv(dfReturns, "RDataGrab/monthlyReturns.csv", row.names = FALSE)
write.csv(dfPrices, "dailyPrices.csv", row.names = FALSE)
rwr <- getSymbols("RWR", from = startDate, to = endDate, warnings = FALSE, auto.assign=FALSE)
rwr <- as.data.frame(monthlyReturn(rwr[,6]))
write.csv(rwr, "rwr.csv", row.names = TRUE)
write.csv(dfPrices, "RDataGrab/dailyPrices.csv", row.names = FALSE)
write.csv(rwr, "RDataGrab/rwr.csv", row.names = TRUE)
read.csv("tickers.csv")
rawMonthlyReturns <- read.csv("monthlyReturns.csv")
tickers <- read.csv("tickers.csv")
View(tickers)
View(rawMonthlyReturns)
tickers <- read.csv("tickers.csv", headers = FALSE)
tickers <- read.csv("tickers.csv", header= FALSE)
tickers <- read.csv("tickers.csv", header = FALSE)
View(tickers)
?hr()
??hr()
runApp(CorrelationApp)
library(shiny)
??hr()
runApp(CorrelationApp)
runApp("CorrelationApp")
runApp("CorrelationApp")
error
error()
runApp("CorrelationApp")
getwd()
setwd("C:/Users/Kevin/Documents/Projects/R/Shiny/REIT")
runApp("CorrelationApp")
runApp("CorrelationApp")
runApp("CorrelationApp")
runApp("CorrelationApp")
runApp("CorrelationApp")
runApp("CorrelationApp")
choices = "text1",
choices = "text1",
runApp("CorrelationApp")
runApp("CorrelationApp")
tickers <- read.csv("tickers.csv", header = FALSE)
rawMonthlyReturns <- read.csv("CorrelationApp/monthlyReturns.csv")
head(rawMonthlyReturns)
col(rawMonthlyReturns)
columns(rawMonthlyReturns)
column(rawMonthlyReturns)
header(rawMonthlyReturns)
rows(rawMonthlyReturns)
View(rawMonthlyReturns)
names(rawMonthlyReturns)
names(rawMonthlyReturns)[]
names(rawMonthlyReturns)[2]
names(rawMonthlyReturns)[2:end]
names(rawMonthlyReturns)[2:length(rawMonthlyReturns)]
names(rawMonthlyReturns)[2:length(rawMonthlyReturns)]
length(rawMonthlyReturns)
tickers <- as.char(names(rawMonthlyReturns)[2:length(rawMonthlyReturns)])
tickers <- names(rawMonthlyReturns)[2:length(rawMonthlyReturns)]
tickers
is.character(tickers)
runApp("CorrelationApp")
rawMonthlyReturns <- read.csv("CorrelationApp/monthlyReturns.csv")
rawMonthlyReturns <- read.csv("CorrelationApp/monthlyReturns.csv")
clear()
rawMonthlyReturns <- read.csv("CorrelationApp/monthlyReturns.csv")
runApp("CorrelationApp")
runApp("CorrelationApp")
textOutput("tickers")
runApp("CorrelationApp")
runApp("CorrelationApp")
runApp("CorrelationApp")
runApp("CorrelationApp")
choices = showOutput("tickers"),
choices = showOutput("tickers"),
runApp("CorrelationApp")
choices = textOutput("tickers"),
runApp("CorrelationApp")
runApp("CorrelationApp")
choices = tickers),
runApp("CorrelationApp")
runApp("CorrelationApp")
?renderPrint
runApp("CorrelationApp")
srts <- ("ACC", "SPG")
srts <- c("ACC", "SPG")
which(srts %in% tickers)
rawMonthlyReturns <- read.csv("data/monthlyReturns.csv")
tickers <- names(rawMonthlyReturns)[2:length(rawMonthlyReturns)]
rawMonthlyReturns <- read.csv("CorrelationApp/data/monthlyReturns.csv")
tickers <- names(rawMonthlyReturns)[2:length(rawMonthlyReturns)]
rawMonthlyReturns <- read.csv("CorrelationApp/data/monthlyReturns.csv")
which(srts %in% tickers)
which(tickers %in% srts)
rawMonthlyReturns[1,2]
rawMonthlyReturns[2,2]
rawMonthlyReturns[2][2]
rawMonthlyReturns[2]
rawMonthlyReturns[2,3]
rawMonthlyReturns[2,6]
rawMonthlyReturns[,6]
selectedREITS <- which(tickers %in% srts)
selectedSeries <- rawMonthlyReturns[,selectedREITS+1]
cor(selectedSeries, y = NULL, use = pairwise.complete.obs)
cor(selectedSeries, y = NULL, use = "pairwise.complete.obs")
runApp("CorrelationApp")
runApp("CorrelationApp")
runApp("CorrelationApp")
runApp("CorrelationApp")
runApp("CorrelationApp")
runApp("CorrelationApp")
srts <- c("ACC", "AEC")
rawMonthlyReturns <- read.csv("CorrelationApp/data/monthlyReturns.csv")
tickers <- names(rawMonthlyReturns)[2:length(rawMonthlyReturns)]
selected <- which(tickers %in% srts)
selectedSeries <- rawMonthlyReturns[,selected+1]
selectedSeries
cor(selectedSeries, y = NULL, use = "pairwise.complete.obs")
?tableOutput
?xtable
??xtable
cor(selectedSeries, y = NULL, use = "pairwise.complete.obs")
c <- cor(selectedSeries, y = NULL, use = "pairwise.complete.obs")
c
is.matrix(c)
as.table(c)
runApp("CorrelationApp")
runApp("CorrelationApp")
runApp("CorrelationApp")
traceback()
traceback()
runApp("CorrelationApp")
runApp("CorrelationApp")
runApp("CorrelationApp")
traceback()
trace()
runApp("CorrelationApp")
runApp("CorrelationApp")
runApp("CorrelationApp")
runApp("CorrelationApp")
runApp("CorrelationApp")
runApp("CorrelationApp")
runApp("CorrelationApp")
runApp("CorrelationApp")
runApp("CorrelationApp")
runApp("CorrelationApp")
c
print.xtable(c)
library(xtable)
print.xtable(c)
as.xtable(c)
xtable(c)
xtable.data.frame(c)
